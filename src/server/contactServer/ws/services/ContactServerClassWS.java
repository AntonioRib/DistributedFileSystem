
package server.contactServer.ws.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ContactServerClassWS", targetNamespace = "http://ws.contactServer.server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ContactServerClassWS {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listFileServers", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.ListFileServers")
    @ResponseWrapper(localName = "listFileServersResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.ListFileServersResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/listFileServersRequest", output = "http://ws.contactServer.server/ContactServerClassWS/listFileServersResponse")
    public List<String> listFileServers();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addFileServer", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.AddFileServer")
    @ResponseWrapper(localName = "addFileServerResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.AddFileServerResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/addFileServerRequest", output = "http://ws.contactServer.server/ContactServerClassWS/addFileServerResponse")
    public void addFileServer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileServersByName", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetFileServersByName")
    @ResponseWrapper(localName = "getFileServersByNameResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetFileServersByNameResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/getFileServersByNameRequest", output = "http://ws.contactServer.server/ContactServerClassWS/getFileServersByNameResponse")
    public List<String> getFileServersByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns server.contactServer.ws.services.ServerInfoClass
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileServerByURL", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetFileServerByURL")
    @ResponseWrapper(localName = "getFileServerByURLResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetFileServerByURLResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/getFileServerByURLRequest", output = "http://ws.contactServer.server/ContactServerClassWS/getFileServerByURLResponse")
    public ServerInfoClass getFileServerByURL(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns server.contactServer.ws.services.ServerInfoClass
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileServerByName", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetFileServerByName")
    @ResponseWrapper(localName = "getFileServerByNameResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetFileServerByNameResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/getFileServerByNameRequest", output = "http://ws.contactServer.server/ContactServerClassWS/getFileServerByNameResponse")
    public ServerInfoClass getFileServerByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "receiveAliveSignal", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.ReceiveAliveSignal")
    @ResponseWrapper(localName = "receiveAliveSignalResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.ReceiveAliveSignalResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/receiveAliveSignalRequest", output = "http://ws.contactServer.server/ContactServerClassWS/receiveAliveSignalResponse")
    public void receiveAliveSignal(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getName", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetName")
    @ResponseWrapper(localName = "getNameResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetNameResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/getNameRequest", output = "http://ws.contactServer.server/ContactServerClassWS/getNameResponse")
    public String getName();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHost", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetHost")
    @ResponseWrapper(localName = "getHostResponse", targetNamespace = "http://ws.contactServer.server/", className = "server.contactServer.ws.services.GetHostResponse")
    @Action(input = "http://ws.contactServer.server/ContactServerClassWS/getHostRequest", output = "http://ws.contactServer.server/ContactServerClassWS/getHostResponse")
    public String getHost();

}
